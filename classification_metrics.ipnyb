{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Error metrics for classification models\n",
    "\n",
    "**Lesson objectives**:\n",
    "* Understand why accuracy isn't always the best error metric for classification\n",
    "* Understand the confusion matrix\n",
    "* Learn the difference between precision and recall \n",
    "* Understand what changing the probability cutoff for logistic regression does to precision and recall and how one might use this in model development\n",
    "* Learn how to balance precision and recall using the F1 score\n",
    "* Understand the ROC curve: how to interpret it and how to use it for model tuning"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "plt.style.use('ggplot')\n",
    "%matplotlib inline\n",
    "np.set_printoptions(suppress=True) # Suppress scientific notation where possible"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Classification on the iris dataset with two classifiers: kNN and logistic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn import datasets\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import precision_score, recall_score, precision_recall_curve,f1_score, fbeta_score\n",
    "\n",
    "iris_dataset = datasets.load_iris()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# As usual, create our train/test split\n",
    "# This will become particularly important as we calculate our error metrics\n",
    "\n",
    "X_train, X_test, label_train, label_test = train_test_split(iris_dataset['data'], iris_dataset['target'], \\\n",
    "                                                            test_size=0.3, random_state=41)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The score for kNN is\n",
      "Training: 100.00%\n",
      "Test set:  93.33%\n"
     ]
    }
   ],
   "source": [
    "knn = KNeighborsClassifier(n_neighbors=5)\n",
    "knn.fit(X_train, label_train)\n",
    "print(\"The score for kNN is\")\n",
    "print(\"Training: {:6.2f}%\".format(100*knn.score(X_train, label_train)))\n",
    "print(\"Test set: {:6.2f}%\".format(100*knn.score(X_test, label_test)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The score for logistic regression is\n",
      "Training:  97.14%\n",
      "Test set:  88.89%\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "//anaconda3/envs/metis/lib/python3.6/site-packages/sklearn/linear_model/logistic.py:432: FutureWarning: Default solver will be changed to 'lbfgs' in 0.22. Specify a solver to silence this warning.\n",
      "  FutureWarning)\n",
      "//anaconda3/envs/metis/lib/python3.6/site-packages/sklearn/linear_model/logistic.py:469: FutureWarning: Default multi_class will be changed to 'auto' in 0.22. Specify the multi_class option to silence this warning.\n",
      "  \"this warning.\", FutureWarning)\n"
     ]
    }
   ],
   "source": [
    "logit = LogisticRegression(C = 0.95)\n",
    "logit.fit(X_train, label_train)\n",
    "print(\"The score for logistic regression is\")\n",
    "print(\"Training: {:6.2f}%\".format(100*logit.score(X_train, label_train)))\n",
    "print(\"Test set: {:6.2f}%\".format(100*logit.score(X_test, label_test)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Unlike kNN, the logistic regression model has a probabiltiy method built into it. Let's look at the predicted probabilities for the first few observations."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.00147874, 0.46261955, 0.53590171],\n",
       "       [0.00070205, 0.29633398, 0.70296396],\n",
       "       [0.00044456, 0.37354788, 0.62600756],\n",
       "       [0.02528873, 0.53348907, 0.4412222 ],\n",
       "       [0.00149941, 0.31563256, 0.68286803]])"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Let's do a prediction of the first 5 observations from logistic\n",
    "\n",
    "logit.predict_proba(X_test[:5,])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's look at the type of errors that these two classifiers made:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "kNN confusion matrix: \n",
      "\n",
      " [[11  0  0]\n",
      " [ 0 16  2]\n",
      " [ 0  1 15]]\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import confusion_matrix\n",
    "\n",
    "print(\"kNN confusion matrix: \\n\\n\", confusion_matrix(label_test, knn.predict(X_test)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "i.e. the kNN confused two samples of species 1 as species 2, and one species 2 as a species 1, but managed to get all of the species 0 irises right. \n",
    "\n",
    "Note that `confusion[row_number][col_number]` tells us how many of the labels that were actually `row_number` were predicted to be `col_number` by our classifier. We can see that by predicting class 2 for everything (this is not data science, it's just for demonstration!)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Confusion matrix for silly model where we predict all 2's: \n",
      "\n",
      " [[ 0  0 11]\n",
      " [ 0  0 18]\n",
      " [ 0  0 16]]\n"
     ]
    }
   ],
   "source": [
    "# What happens when we just predict class 2 for everything? \n",
    "print(\"Confusion matrix for silly model where we predict all 2's: \\n\\n\", \\\n",
    "      confusion_matrix(label_test, [2]*len(label_test)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can make this a little prettier by passing the confusion matrix to `sns.heatmap`:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 900x600 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Print confusion matrix for kNN\n",
    "knn_confusion = confusion_matrix(label_test, knn.predict(X_test))\n",
    "plt.figure(dpi=150)\n",
    "sns.heatmap(knn_confusion, cmap=plt.cm.Blues, annot=True, square=True,\n",
    "           xticklabels=iris_dataset['target_names'],\n",
    "           yticklabels=iris_dataset['target_names'])\n",
    "\n",
    "plt.xlabel('Predicted species')\n",
    "plt.ylabel('Actual species')\n",
    "plt.title('kNN confusion matrix');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 900x600 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Print confusion matrix for logistic regression\n",
    "logit_confusion = confusion_matrix(label_test, logit.predict(X_test))\n",
    "plt.figure(dpi=150)\n",
    "sns.heatmap(logit_confusion, cmap=plt.cm.Blues, annot=True, square=True,\n",
    "           xticklabels=iris_dataset['target_names'],\n",
    "           yticklabels=iris_dataset['target_names'])\n",
    "\n",
    "plt.xlabel('Predicted species')\n",
    "plt.ylabel('Actual species')\n",
    "plt.title('Logistic regression confusion matrix');\n",
    "\n",
    "plt.tight_layout()\n",
    "\n",
    "plt.savefig(\"confusion_matrix_logit_iris\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Why accuracy sometimes doesn't make sense: credit card data example\n",
    "\n",
    "We are going to look at an example of credit card data, where the positive class is \"transaction is fraudulant\" and the negative class is \"transaction is not fraudulant\".\n",
    "\n",
    "That is, a false positive is a transaction we flag as fraudulant that is actually legitimite, whereas a false negative is a transaction we claim is legitimate that turns out to be fraudulant."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Let's read in some credit card data!\n",
    "df = pd.read_csv('https://s3.amazonaws.com/gamma-datasets/P3/creditcard.csv.gz')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---\n",
    "**STUDENT EXERCISE:**\n",
    "\n",
    "(1) What's the distribution of fraud to non-fraud cases? \n",
    "\n",
    "(2) Now build a confusion matrix where you predict everything as not fraud! Is this helpful? \n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# exercise 1: distribution of fraud to non-fraud"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "//anaconda3/envs/metis/lib/python3.6/site-packages/sklearn/linear_model/logistic.py:432: FutureWarning: Default solver will be changed to 'lbfgs' in 0.22. Specify a solver to silence this warning.\n",
      "  FutureWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Logistic score: 0.9992\n"
     ]
    }
   ],
   "source": [
    "# Let's make a slightly better model\n",
    "X_train, X_test, y_train, y_test = train_test_split(df.iloc[:, 1:-1], df.iloc[:, -1])\n",
    "lm = LogisticRegression(C = 100)\n",
    "lm.fit(X_train, y_train)\n",
    "print(\"Logistic score: {:6.4f}\".format(lm.score(X_train,y_train)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "def make_confusion_matrix(model, threshold=0.5):\n",
    "    # Predict class 1 if probability of being in class 1 is greater than threshold\n",
    "    # (model.predict(X_test) does this automatically with a threshold of 0.5)\n",
    "    y_predict = (model.predict_proba(X_test)[:, 1] >= threshold)\n",
    "    fraud_confusion = confusion_matrix(y_test, y_predict)\n",
    "    plt.figure(dpi=80)\n",
    "    sns.heatmap(fraud_confusion, cmap=plt.cm.Blues, annot=True, square=True, fmt='d',\n",
    "           xticklabels=['legit', 'fraud'],\n",
    "           yticklabels=['legit', 'fraud']);\n",
    "    plt.xlabel('prediction')\n",
    "    plt.ylabel('actual')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 480x320 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "make_confusion_matrix(lm)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# in the above, precision is great, recall could be better"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "ba2556919a4740cbad45627d82fb7448",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "interactive(children=(FloatSlider(value=0.5, description='threshold', max=1.0, step=0.02), Output()), _dom_cla…"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Let's see how our confusion matrix changes with changes to the cutoff! \n",
    "\n",
    "from ipywidgets import interactive, FloatSlider\n",
    "\n",
    "interactive(lambda threshold: make_confusion_matrix(lm, threshold), threshold=(0.0,1.0,0.02))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**CHECK FOR UNDERSTANDING:**\n",
    "\n",
    "What happens if we change our threshold to .06? What does this mean? How would our confusion matrix look?\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---\n",
    "\n",
    "## New metrics: precision and recall\n",
    "\n",
    "We can introduce two new metrics:\n",
    "- **Precision:** The fraction of postive predictions you made that were correct. \n",
    "  High precision means that if your model predicted a positive case, you believe it with high confidence. It doesn't tell us how many postive cases we missed (i.e. it doesn't tell us how sure we are about the cases we predicted were negative).\n",
    "- **Recall**: The fraction of positive cases you predicted correctly.\n",
    "  High recall means that you are confident that you didn't miss any positive cases. \n",
    "  \n",
    "The easiest way to get high precision is to call a point positive only when you are very sure. The easiest way to get 100% recall is to predict all points to be positive, as you are guaranteed to label 100% of all positive cases. You should not optimize for either recall or precision -- you need to think about how to balance them against one another.\n",
    "\n",
    "In formula:\n",
    "$$ \\text{Precision} = \\frac{\\text{(True positives)}}{\\text{Predicted positives}} = \\frac{\\text{True positives}}{\\text{True positives} + \\text{False postitives}}$$\n",
    "and\n",
    "$$ \\text{Recall} = \\frac{\\text{True positives}}{\\text{Actual positives}} = \\frac{\\text{True positives}}{\\text{True positives} + \\text{False negatives}}$$\n",
    "\n",
    "### Example calcuation: fraud when threshold = 0.5 \n",
    "\n",
    "|_                            | predicted negative (legit) | predicted positive (fraud) | Total |\n",
    "|-----------------------------| -------------------------- | -------------------------- | ----- |\n",
    "| **actual negative (legit)** | 71058                      | 11                         | 71069 |\n",
    "| **actual positive (fraud)** | 47                         | 86                         | 133   |\n",
    "| **Total**                   | 71105                      | 97                         | 71202 |\n",
    "\n",
    "\n",
    "For precision:\n",
    "$$\\text{Precision} = \\frac{TP}{\\text{predicted positive}} = \\frac{86}{86 + 11} = 0.887$$\n",
    "i.e. this 88.7% of the tests positive predictions are correct.\n",
    "\n",
    "For recall:\n",
    "$$\\text{Recall} = \\frac{TP}{\\text{actual positives}} = \\frac{86}{86+47} = 0.647$$\n",
    "i.e. the model can only get (or 'remember'/'recall') 64.7% of fraudulent transactions.\n",
    "\n",
    "\n",
    "### Example calculation: fraud when threshold = 0.06\n",
    "\n",
    "|-                            | predicted negative (legit) | predicted positive (fraud) | Total |\n",
    "|-----------------------------| -------------------------- | -------------------------- | ----- |\n",
    "| **actual negative (legit)** | 71039                      | 30                         | 71069 |\n",
    "| **actual positive (fraud)** | 23                         | 110                        | 133   |\n",
    "| **Total**                   | 71062                      | 140                        | 71202 |\n",
    "\n",
    "Calculating precision and recall:\n",
    "* Precision = 110 / 140 = 78.5%\n",
    "* Recall = 110 / 133 = 82.7%\n",
    "i.e. by lowering the probability threshold before we label a transaction fraud, we caught more fraud (high recall), but we also investigated more innocent transactions (lower precision).\n",
    "\n",
    "## Big takeaways:\n",
    "\n",
    "* Using the **same** logistic regression model, we can change the threshold to bias toward more precision (making positives from test more relevant) or recall (increasing the fraction of postives found).\n",
    "* Precision goes down as you decrease the threshold, while recall goes up. This is called the _precision-recall tradeoff_.\n",
    "* Which is worse, low recall or low precision? Depends on the cost of making the different types of error.\n",
    "* We just need the final predictions of the model to calculate precision and recall. We can get sklearn.metrics to calculate them for us"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Default threshold:\n",
      "Precision: 0.8523,   Recall: 0.6000\n"
     ]
    }
   ],
   "source": [
    "# using the default threshold of 0.5, which is what vanilla predict does\n",
    "y_predict = lm.predict(X_test)\n",
    "print(\"Default threshold:\")\n",
    "print(\"Precision: {:6.4f},   Recall: {:6.4f}\".format(precision_score(y_test, y_predict), \n",
    "                                                     recall_score(y_test, y_predict)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Threshold of 0.06:\n",
      "Precision: 0.7042,   Recall: 0.8000\n"
     ]
    }
   ],
   "source": [
    "# using the new threshold of 0.06\n",
    "y_predict = (lm.predict_proba(X_test)[:,1] > 0.06)\n",
    "print(\"Threshold of 0.06:\")\n",
    "print(\"Precision: {:6.4f},   Recall: {:6.4f}\".format(precision_score(y_test, y_predict), \n",
    "                                                     recall_score(y_test, y_predict)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 480x320 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# We can also use the probabilities to make a curve showing us how recall \n",
    "# and thresholds trade off \n",
    "\n",
    "precision_curve, recall_curve, threshold_curve = precision_recall_curve(y_test, lm.predict_proba(X_test)[:,1] )\n",
    "\n",
    "plt.figure(dpi=80)\n",
    "plt.plot(threshold_curve, precision_curve[1:],label='precision')\n",
    "plt.plot(threshold_curve, recall_curve[1:], label='recall')\n",
    "plt.legend(loc='lower left')\n",
    "plt.xlabel('Threshold (above this probability, label as fraud)');\n",
    "plt.title('Precision and Recall Curves');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 480x320 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(dpi=80)\n",
    "plt.plot(recall_curve[1:], precision_curve[1:],label='precision')\n",
    "plt.xlabel(\"Recall\")\n",
    "plt.ylabel(\"Precision\")\n",
    "plt.title(\"Precision-Recall Curve\");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### F1 score: balancing precision vs. recall\n",
    "\n",
    "A heuristic for finding a good balance is to use $F_1$ score: \n",
    "\n",
    "$$F_1 = \\frac{2}{\\frac{1}{\\text{precision}} + \\frac{1}{\\text{recall}}} = 2 \\frac{\\text{precision} \\times \\text{recall}}{\\text{precision} + \\text{recall}}$$\n",
    "\n",
    "The goal here is to find a balance between a good recall score and a good precision score. We can calculate it manually.\n",
    "\n",
    "For the default threshold we have\n",
    "\n",
    "precision = 0.8810, recall = 0.6218\n",
    "\n",
    "so\n",
    "\n",
    "$$F_1 = 2\\frac{(0.8810)(0.6218)}{0.8810 + 0.6218} = 0.7290$$"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---\n",
    "**STUDENT EXERCISE:**\n",
    "\n",
    "Use `f1_score` from sklearn to check our calculation above. Look at the F1 score for (1) default threshold and (2) threshold of .06\n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Generalizing the F1 score\n",
    "\n",
    "As the name suggests, there is actually a whole family of $F_1$ scores. We have in general:\n",
    "\n",
    "$$F_{\\beta} = \\frac{\\text{precision} \\times \\text{recall}}{\\text{weighted average of precision and recall}}$$\n",
    "\n",
    "where the weighted average is given by\n",
    "\n",
    "$$\\text{weighted average} = \\frac{\\beta^2 \\times \\text{precision} + 1 \\times \\text{recall}}{\\beta^2 + 1}$$\n",
    "\n",
    "The rough interpretation is that $F_{\\beta}$ attaches $\\beta$ times more importance to recall than precision. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## The ROC curve\n",
    "\n",
    "We've already seen that we don't have to accept a 50% threshold cutoff. As we've seen, we can plot our models with different thresholds on the same chart and get a ROC curve. This curve plots the *true positive rate* on the y axis, and the *false positive rate* on the x axis. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Precision = TP / (TP + FP)\n",
    "# Recall = TP/P = True positive rate\n",
    "# false positive rate = FP / true negatives = FP / (FP + TN) \n",
    "from sklearn.metrics import roc_auc_score, roc_curve\n",
    "\n",
    "fpr, tpr, thresholds = roc_curve(y_test, lm.predict_proba(X_test)[:,1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ROC AUC score =  0.9788576332709596\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(fpr, tpr,lw=2)\n",
    "plt.plot([0,1],[0,1],c='violet',ls='--')\n",
    "plt.xlim([-0.05,1.05])\n",
    "plt.ylim([-0.05,1.05])\n",
    "\n",
    "\n",
    "plt.xlabel('False positive rate')\n",
    "plt.ylabel('True positive rate')\n",
    "plt.title('ROC curve for fraud problem');\n",
    "print(\"ROC AUC score = \", roc_auc_score(y_test, lm.predict_proba(X_test)[:,1]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The intepretation of the _Area Under the Curve_ (AUC) is the probability that a randomly chosen positive example (in this case, fraud) has a higher score than the randomly chosen negative example (in this case, legitimate transactions).\n",
    "\n",
    "We see here all the possible TPRs and FNRs that we could have. It is a nice metric because looking at the behavior of our model, we can choose later what we want the threshold to be.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Question 1: What would a \"perfect classifier\" look like on this diagram?**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Upper left \n",
    "\n",
    "What is an example of data leakage? "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Question 2: What is the significance of the diagonal line?**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Question 3: Is it possible to get a classifier that dips below the dotted line?**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Question 4: Can we read the threshold off the ROC curve above?**"
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  },
  "toc": {
   "colors": {
    "hover_highlight": "#DAA520",
    "navigate_num": "#000000",
    "navigate_text": "#333333",
    "running_highlight": "#FF0000",
    "selected_highlight": "#FFD700",
    "sidebar_border": "#EEEEEE",
    "wrapper_background": "#FFFFFF"
   },
   "moveMenuLeft": false,
   "nav_menu": {
    "height": "210px",
    "width": "252px"
   },
   "navigate_menu": true,
   "number_sections": false,
   "sideBar": false,
   "threshold": "3",
   "toc_cell": false,
   "toc_section_display": "block",
   "toc_window_display": false,
   "widenNotebook": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
